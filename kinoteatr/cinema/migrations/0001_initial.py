# Generated by Django 3.2 on 2021-05-10 12:03

import cinema.models.cinema
import cinema.models.gallery
import cinema.models.movie
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Неправильный формат номера.', regex='^\\+\\d{8,15}$')])),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('card_number', models.CharField(blank=True, max_length=50, null=True)),
                ('language', models.IntegerField(choices=[(0, 'Русский'), (1, 'Украинский')], default=0)),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'Мужской'), (1, 'Женский')], null=True)),
                ('birthday_date', models.DateTimeField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AboutCinema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=5000)),
                ('main_image', models.ImageField(upload_to='about_cinema/main_images/')),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=5000)),
                ('main_image', models.ImageField(upload_to='ad/main_images/')),
                ('url', models.URLField()),
                ('publication_date', models.DateField()),
                ('status', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=5000)),
                ('main_image', models.ImageField(upload_to='Advertisement/main_images/')),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BackgroundImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='background_image/')),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CafeBar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=5000)),
                ('main_image', models.ImageField(upload_to='cafebar/main_images/')),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChildRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=5000)),
                ('main_image', models.ImageField(upload_to='child_room/main_images/')),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('conditions', models.TextField()),
                ('on_top_banner', models.ImageField(upload_to=cinema.models.cinema.get_cinema_main_image_path)),
                ('logo', models.ImageField(upload_to=cinema.models.cinema.get_cinema_logo_path)),
            ],
        ),
        migrations.CreateModel(
            name='CinemaHall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('description', models.TextField()),
                ('schema', models.FileField(upload_to='cinema_hall/schema/')),
                ('schema_json', models.TextField(default='{}')),
                ('on_top_banner', models.ImageField(upload_to=cinema.models.cinema.get_hall_main_image_path)),
                ('seats_amount', models.IntegerField(default=0)),
                ('is_2d', models.BooleanField(default=True)),
                ('is_3d', models.BooleanField(default=False)),
                ('is_imax', models.BooleanField(default=False)),
                ('is_vip_hall', models.BooleanField(default=False)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('cinema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='halls', to='cinema.cinema')),
            ],
        ),
        migrations.CreateModel(
            name='HtmlEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.FileField(upload_to='htmlEmail')),
            ],
        ),
        migrations.CreateModel(
            name='MobileApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=5000)),
                ('main_image', models.ImageField(upload_to='mobile_app/main_images/')),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('main_image', models.ImageField(upload_to=cinema.models.movie.get_main_image_path)),
                ('url', embed_video.fields.EmbedVideoField()),
                ('is_2d', models.BooleanField(default=True)),
                ('is_3d', models.BooleanField(default=False)),
                ('is_imax', models.BooleanField(default=False)),
                ('released', models.BooleanField(default=False)),
                ('release', models.DateField()),
                ('language', models.IntegerField(choices=[(1, 'Русский'), (2, 'Украинский'), (3, 'Английский')])),
                ('director', models.CharField(max_length=100)),
                ('running_time', models.TimeField()),
                ('country', models.CharField(max_length=100)),
                ('genre', models.IntegerField(choices=[(1, 'Comedy'), (2, 'Horror'), (3, 'Action'), (4, 'Thriller'), (5, 'Adventure')])),
                ('age_limit', models.IntegerField(choices=[(1, '<18'), (2, '>18')])),
            ],
            options={
                'db_table': 'movie',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=5000)),
                ('main_image', models.ImageField(upload_to='news/main_images/')),
                ('url', models.URLField(blank=True, null=True)),
                ('publication_date', models.DateField()),
                ('status', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='OnTopBanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speed', models.IntegerField(choices=[(1, '5s'), (2, '10s')], default=1)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_url', models.URLField(blank=True, null=True)),
                ('seo_title', models.CharField(blank=True, max_length=100, null=True)),
                ('seo_keywords', models.CharField(blank=True, max_length=2000, null=True)),
                ('seo_description', models.TextField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'seo',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_datetime_start', models.DateTimeField()),
                ('session_datetime_end', models.DateTimeField()),
                ('session_hall_schema', models.TextField()),
                ('ticket_price', models.IntegerField()),
                ('type', models.IntegerField(choices=[(1, '2D'), (2, '3D'), (3, 'IMAX')])),
                ('cinema_hall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='cinema.cinemahall')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='cinema.movie')),
            ],
        ),
        migrations.CreateModel(
            name='SliderBanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speed', models.IntegerField(choices=[(1, '5s'), (2, '10s')], default=1)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VipHall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=5000)),
                ('main_image', models.ImageField(upload_to='vip_hall/main_images/')),
                ('status', models.BooleanField(default=True)),
                ('seo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vip_hall', to='cinema.seo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VipHallGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='vip_hall/gallery/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.viphall')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_number', models.IntegerField()),
                ('seat_number', models.IntegerField()),
                ('reserved', models.BooleanField(default=False)),
                ('bought', models.BooleanField(default=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='cinema.session')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SliderBannerGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='slider_banner/gallery/')),
                ('url', models.URLField(blank=True, null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.sliderbanner')),
            ],
        ),
        migrations.CreateModel(
            name='OnTopBannerGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='on_top_banner/gallery/')),
                ('url', models.URLField(blank=True, null=True)),
                ('text', models.CharField(blank=True, max_length=150, null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.ontopbanner')),
            ],
        ),
        migrations.CreateModel(
            name='NewsGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='news/gallery/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.news')),
            ],
        ),
        migrations.AddField(
            model_name='news',
            name='seo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='news', to='cinema.seo'),
        ),
        migrations.CreateModel(
            name='MovieGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=cinema.models.gallery.get_movie_gallery_image_path)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.movie')),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='seo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='movies', to='cinema.seo'),
        ),
        migrations.CreateModel(
            name='MobileAppGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='mobile_app/gallery/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.mobileapp')),
            ],
        ),
        migrations.AddField(
            model_name='mobileapp',
            name='seo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mobile_app', to='cinema.seo'),
        ),
        migrations.CreateModel(
            name='MainPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number1', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='Неправильный формат номера.', regex='^\\+\\d{8,15}$')])),
                ('phone_number2', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='Неправильный формат номера.', regex='^\\+\\d{8,15}$')])),
                ('status', models.BooleanField(default=True)),
                ('seo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_page', to='cinema.seo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, null=True)),
                ('map', models.TextField()),
                ('status', models.BooleanField(default=True)),
                ('top_seo', models.BooleanField(default=False)),
                ('cinema', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='cinema.cinema')),
                ('seo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='cinema.seo')),
            ],
        ),
        migrations.CreateModel(
            name='CinemaHallGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=cinema.models.gallery.get_cinema_hall_gallery_image_path)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.cinemahall')),
            ],
        ),
        migrations.AddField(
            model_name='cinemahall',
            name='seo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cinema_hall', to='cinema.seo'),
        ),
        migrations.CreateModel(
            name='CinemaGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=cinema.models.gallery.get_cinema_gallery_image_path)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.cinema')),
            ],
        ),
        migrations.AddField(
            model_name='cinema',
            name='seo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cinema', to='cinema.seo'),
        ),
        migrations.CreateModel(
            name='ChildRoomGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='child_room/gallery/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.childroom')),
            ],
        ),
        migrations.AddField(
            model_name='childroom',
            name='seo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_room', to='cinema.seo'),
        ),
        migrations.CreateModel(
            name='CafeBarGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='cafebar/gallery/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.cafebar')),
            ],
        ),
        migrations.AddField(
            model_name='cafebar',
            name='seo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cafebar', to='cinema.seo'),
        ),
        migrations.CreateModel(
            name='AdvertisementGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='advertisement/gallery/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.advertisement')),
            ],
        ),
        migrations.AddField(
            model_name='advertisement',
            name='seo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Advertisement', to='cinema.seo'),
        ),
        migrations.CreateModel(
            name='AdsGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='ad/gallery/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.ad')),
            ],
        ),
        migrations.AddField(
            model_name='ad',
            name='seo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ad', to='cinema.seo'),
        ),
        migrations.CreateModel(
            name='AboutCinemaGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='about_cinema/gallery/')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cinema.aboutcinema')),
            ],
        ),
        migrations.AddField(
            model_name='aboutcinema',
            name='seo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='about_cinema', to='cinema.seo'),
        ),
    ]
